{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/pages/_document.tsx"],"sourcesContent":["import {Html, Head, Main, NextScript} from 'next/document';\n\nexport default function Document() {\n  return (\n    <Html lang=\"en\">\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;;;;;;;AAEe,SAAS;IACtB,qBACE,sMAAC,yHAAA,CAAA,OAAI;QAAC,MAAK;;0BACT,sMAAC,yHAAA,CAAA,OAAI;;;;;0BACL,sMAAC;;kCACC,sMAAC,yHAAA,CAAA,OAAI;;;;;kCACL,sMAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/components/Layout.tsx"],"sourcesContent":["import {WithChildren} from '@/types/with';\nimport {css} from '@emotion/react';\n\nconst Layout = ({children}: WithChildren) => {\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        background-color: lightgray;\n      `}\n    >\n      <div\n        css={css`\n          max-width: 768px;\n          width: 100%;\n          min-height: 100vh;\n\n          padding: 0 1rem;\n\n          display: flex;\n          flex-direction: column;\n          justify-content: start;\n\n          background-color: white;\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n"],"names":[],"mappings":";;;;AACA;;;;;;;;AAEA,MAAM,SAAS,CAAC,EAAC,QAAQ,EAAe;IACtC,qBACE,sMAAC;QACC,KAAK,oIAAA,CAAA,MAAG,CAAC;;;;;;MAMT,CAAC;kBAED,cAAA,sMAAC;YACC,KAAK,oIAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;QAYT,CAAC;sBAEA;;;;;;;;;;;AAIT;uCAEe"}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/GlobalStyle.ts"],"sourcesContent":["import {css} from '@emotion/react';\n\n// reset css -> index css\nexport const GlobalStyle = css`\n  *:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {\n    all: unset;\n    display: revert;\n  }\n\n  /* Preferred box-sizing value */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  /* Fix mobile Safari increase font-size on landscape mode */\n  html {\n    -moz-text-size-adjust: none;\n    -webkit-text-size-adjust: none;\n    text-size-adjust: none;\n  }\n\n  /* Reapply the pointer cursor for anchor tags */\n  a,\n  button {\n    cursor: revert;\n    /* line-height: 0; */\n  }\n\n  button:disabled {\n    cursor: default;\n  }\n\n  /* Remove list styles (bullets/numbers) */\n  ol,\n  ul,\n  menu,\n  summary {\n    list-style: none;\n  }\n\n  /* Removes spacing between cells in tables */\n  table {\n    border-collapse: collapse;\n  }\n\n  /* Safari - solving issue when using user-select:none on the <body> text input doesn't working */\n  input,\n  textarea {\n    -webkit-user-select: auto;\n  }\n\n  /* Revert the 'white-space' property for textarea elements on Safari */\n  textarea {\n    white-space: revert;\n  }\n\n  /* Minimum style to allow to style meter element */\n  meter {\n    -webkit-appearance: revert;\n    appearance: revert;\n  }\n\n  /* Preformatted text - use only for this feature */\n  :where(pre) {\n    all: revert;\n    box-sizing: border-box;\n  }\n\n  /* Fix the feature of 'hidden' attribute.\n       display: revert; revert to element instead of attribute */\n  :where([hidden]) {\n    display: none;\n  }\n\n  /* Revert for bug in Chromium browsers\n       - Fix for the content editable attribute will work properly.\n       - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element */\n  :where([contenteditable]:not([contenteditable='false'])) {\n    -moz-user-modify: read-write;\n    -webkit-user-modify: read-write;\n    overflow-wrap: break-word;\n    -webkit-line-break: after-white-space;\n    -webkit-user-select: auto;\n  }\n\n  /* Apply back the draggable feature - exist only in Chromium and Safari */\n  :where([draggable='true']) {\n    -webkit-user-drag: element;\n  }\n\n  /* Revert Modal native behavior */\n  :where(dialog:modal) {\n    all: revert;\n    box-sizing: border-box;\n  }\n\n  /* Remove details summary webkit styles */\n  ::-webkit-details-marker {\n    display: none;\n  }\n\n  /* Chrome, Safari, Edge, Opera */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox  */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  #root {\n    display: flex;\n    justify-content: center;\n    -webkit-tap-highlight-color: transparent;\n  }\n\n  button {\n    cursor: pointer;\n  }\n\n  body {\n    font-size: 14px;\n    overflow-x: hidden;\n    font-family: 'Pretendard', -apple-system, BlinkMacSystemFont, system-ui, Roboto, 'Helvetica Neue', 'Segoe UI',\n      'Apple SD Gothic Neo', 'Noto Sans KR', 'Malgun Gothic', 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  scrollbar-width: none; /* Firefox */\n  -ms-overflow-style: none; /* IE and Edge */\n  &::-webkit-scrollbar {\n    display: none; /* Chrome, Safari, Opera */\n  }\n`;\n"],"names":[],"mappings":";;;AAAA;;;;;;AAGO,MAAM,cAAc,oIAAA,CAAA,MAAG,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyI/B,CAAC"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/theme.ts"],"sourcesContent":["// 라이트, 다크와 같은 특성의 테마에 따라 쉽게 바뀔 수 있는 값들을 위해 모아놓은 것\n\nimport {css, keyframes} from '@emotion/react';\n\nconst colors = {\n  alert: '#FF3D3D',\n  gray5: '#000000',\n  gray4: '#333333',\n  gray3: '#8B95A1',\n  gray2: '#ACACAC',\n  gray1: '#FFFFFF',\n} as const;\n\nconst cardColors = {\n  bc: '#F04651',\n  shinhan: '#0046FF',\n  kakao: '#FFE600',\n  hyundai: '#000000',\n  woori: '#007BC8',\n  lotte: '#ED1C24',\n  hana: '#009490',\n  kb: '#6A6056',\n};\n\nconst shimmer = keyframes`\n  0% {\n    background-position: -200% 0;\n  }\n  100% {\n    background-position: 200% 0;\n  }\n`;\n\nconst statusColor = (status: 'focus' | 'none' | 'error') => {\n  switch (status) {\n    case 'focus':\n      return colors.gray5;\n    case 'error':\n      return colors.alert;\n    case 'none':\n    default:\n      return colors.gray2;\n  }\n};\n\nconst borderCSS = (status: 'focus' | 'none' | 'error' = 'none') => css`\n  border: 1px solid ${statusColor(status)};\n  border-radius: 2px;\n`;\n\nconst skeletonCSS = css`\n  display: inline-block;\n  background: linear-gradient(90deg, ${colors.gray2} 25%, ${colors.gray1} 50%, ${colors.gray2} 75%);\n  background-size: 200% 100%;\n  animation: ${shimmer} 1.5s infinite linear;\n  border-radius: 8px;\n\n  width: 100%;\n\n  overflow: hidden;\n`;\n\nconst theme = {\n  colors,\n  cardColors,\n  borderCSS,\n  skeletonCSS,\n} as const;\n\nexport default theme;\n"],"names":[],"mappings":"AAAA,kDAAkD;;;;AAElD;;;;;;AAEA,MAAM,SAAS;IACb,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;IACP,OAAO;AACT;AAEA,MAAM,aAAa;IACjB,IAAI;IACJ,SAAS;IACT,OAAO;IACP,SAAS;IACT,OAAO;IACP,OAAO;IACP,MAAM;IACN,IAAI;AACN;AAEA,MAAM,UAAU,oIAAA,CAAA,YAAS,CAAC;;;;;;;AAO1B,CAAC;AAED,MAAM,cAAc,CAAC;IACnB,OAAQ;QACN,KAAK;YACH,OAAO,OAAO,KAAK;QACrB,KAAK;YACH,OAAO,OAAO,KAAK;QACrB,KAAK;QACL;YACE,OAAO,OAAO,KAAK;IACvB;AACF;AAEA,MAAM,YAAY,CAAC,SAAqC,MAAM,GAAK,oIAAA,CAAA,MAAG,CAAC;oBACnD,EAAE,YAAY,QAAQ;;AAE1C,CAAC;AAED,MAAM,cAAc,oIAAA,CAAA,MAAG,CAAC;;qCAEa,EAAE,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,CAAC,MAAM,EAAE,OAAO,KAAK,CAAC;;aAEjF,EAAE,QAAQ;;;;;;AAMvB,CAAC;AAED,MAAM,QAAQ;IACZ;IACA;IACA;IACA;AACF;uCAEe"}},
    {"offset": {"line": 397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/pages/_app.tsx"],"sourcesContent":["import Layout from '@/components/Layout';\nimport {GlobalStyle} from '@/GlobalStyle';\nimport theme from '@/theme';\nimport {Global, ThemeProvider} from '@emotion/react';\nimport type {AppProps} from 'next/app';\n\nexport default function App({Component, pageProps}: AppProps) {\n  return (\n    <ThemeProvider theme={theme}>\n      <Global styles={GlobalStyle} />\n      <Layout>\n        <Component {...pageProps} />\n      </Layout>\n    </ThemeProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;AAGe,SAAS,IAAI,EAAC,SAAS,EAAE,SAAS,EAAW;IAC1D,qBACE,sMAAC,oIAAA,CAAA,gBAAa;QAAC,OAAO,qGAAA,CAAA,UAAK;;0BACzB,sMAAC,oIAAA,CAAA,SAAM;gBAAC,QAAQ,2GAAA,CAAA,cAAW;;;;;;0BAC3B,sMAAC,qHAAA,CAAA,UAAM;0BACL,cAAA,sMAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;AAIhC"}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 463, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/components/Button.tsx"],"sourcesContent":["import {WithChildren} from '@/types/with';\nimport {css, useTheme} from '@emotion/react';\nimport {ComponentProps} from 'react';\n\ntype Props = ComponentProps<'button'> &\n  WithChildren & {\n    fullWidth?: boolean;\n  };\n\nconst Button = ({fullWidth, children, ...attrs}: Props) => {\n  const {colors} = useTheme();\n\n  return (\n    <button\n      css={css`\n        background-color: ${colors.gray5};\n        color: ${colors.gray1};\n        padding: 12px 0;\n\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        border-radius: 8px;\n\n        width: ${fullWidth ? '100%' : 'auto'};\n      `}\n      {...attrs}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"names":[],"mappings":";;;;AACA;;;;;;;;AAQA,MAAM,SAAS,CAAC,EAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAa;IACpD,MAAM,EAAC,MAAM,EAAC,GAAG,CAAA,GAAA,oIAAA,CAAA,WAAQ,AAAD;IAExB,qBACE,sMAAC;QACC,KAAK,oIAAA,CAAA,MAAG,CAAC;0BACW,EAAE,OAAO,KAAK,CAAC;eAC1B,EAAE,OAAO,KAAK,CAAC;;;;;;;;;eASf,EAAE,YAAY,SAAS,OAAO;MACvC,CAAC;QACA,GAAG,KAAK;kBAER;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/constants/typography.ts"],"sourcesContent":["// 상수 파일은 변형될 가능성이 크므로 default export 를 사용하지 않음\n\nexport const TYPOGRAPHY = {\n  title: {\n    fontSize: '18px',\n    fontWeight: '700',\n  },\n  subTitle: {\n    fontSize: '15px',\n    fontWeight: '700',\n  },\n  body: {\n    fontSize: '12px',\n    fontWeight: '500',\n  },\n  bodyBold: {\n    fontSize: '16px',\n    fontWeight: '600',\n    lineHeight: '24px',\n  },\n  caption: {\n    fontSize: '9.5px',\n    fontWeight: '400',\n  },\n  card: {\n    fontSize: '14px',\n    fontWeight: '500',\n    letterSpacing: '3px',\n  },\n} as const;\n"],"names":[],"mappings":"AAAA,+CAA+C;;;;AAExC,MAAM,aAAa;IACxB,OAAO;QACL,UAAU;QACV,YAAY;IACd;IACA,UAAU;QACR,UAAU;QACV,YAAY;IACd;IACA,MAAM;QACJ,UAAU;QACV,YAAY;IACd;IACA,UAAU;QACR,UAAU;QACV,YAAY;QACZ,YAAY;IACd;IACA,SAAS;QACP,UAAU;QACV,YAAY;IACd;IACA,MAAM;QACJ,UAAU;QACV,YAAY;QACZ,eAAe;IACjB;AACF"}},
    {"offset": {"line": 571, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 577, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/components/Text.tsx"],"sourcesContent":["import {css, SerializedStyles, useTheme} from '@emotion/react';\nimport {ComponentPropsWithoutRef, ReactElement} from 'react';\nimport {TYPOGRAPHY} from '../constants/typography';\nimport theme from '../theme';\n\ntype AsType = 'p' | 'span' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n\ntype Props<T extends AsType = 'p'> = {\n  as?: T; // 동적으로 태그를 전달\n  type?: keyof typeof TYPOGRAPHY;\n  color?: keyof typeof theme.colors;\n  cssProp?: SerializedStyles | SerializedStyles[];\n  children: string | (string | ReactElement<'br'>)[];\n  textAlign?: 'left' | 'center' | 'right';\n} & ComponentPropsWithoutRef<T>;\n\nconst Text = <T extends AsType = 'p'>({\n  textAlign = 'center',\n  type = 'body',\n  color,\n  children,\n  cssProp,\n  ...rest\n}: Props<T>) => {\n  const {colors} = useTheme();\n  const Element: React.ElementType = rest.as || 'p';\n\n  return (\n    <Element\n      css={css`\n        ${TYPOGRAPHY[type]}\n        color: ${color ? colors[color] : colors.gray5};\n\n        text-align: ${textAlign || 'left'};\n\n        display: flex;\n        ${cssProp}\n      `}\n      {...rest}\n    >\n      {children}\n    </Element>\n  );\n};\nexport default Text;\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;;;;;AAcA,MAAM,OAAO,CAAyB,EACpC,YAAY,QAAQ,EACpB,OAAO,MAAM,EACb,KAAK,EACL,QAAQ,EACR,OAAO,EACP,GAAG,MACM;IACT,MAAM,EAAC,MAAM,EAAC,GAAG,CAAA,GAAA,oIAAA,CAAA,WAAQ,AAAD;IACxB,MAAM,UAA6B,KAAK,EAAE,IAAI;IAE9C,qBACE,sMAAC;QACC,KAAK,oIAAA,CAAA,MAAG,CAAC;QACP,EAAE,uHAAA,CAAA,aAAU,CAAC,KAAK,CAAC;eACZ,EAAE,QAAQ,MAAM,CAAC,MAAM,GAAG,OAAO,KAAK,CAAC;;oBAElC,EAAE,aAAa,OAAO;;;QAGlC,EAAE,QAAQ;MACZ,CAAC;QACA,GAAG,IAAI;kBAEP;;;;;;AAGP;uCACe"}},
    {"offset": {"line": 613, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 620, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/components/InvalidTouch.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport {css} from '@emotion/react';\nimport {useRouter} from 'next/router';\nimport Text from './Text';\nimport Button from './Button';\n\nconst InvalidTouch = () => {\n  const router = useRouter();\n\n  return (\n    <div\n      css={css`\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        height: 100vh;\n        text-align: center;\n\n        gap: 32px;\n      `}\n    >\n      <Text as=\"h1\" type=\"title\">\n        올바른 접근이 아닙니다.\n      </Text>\n\n      <Button onClick={() => router.back()} fullWidth>\n        이전 페이지로 이동\n      </Button>\n    </div>\n  );\n};\n\nexport default InvalidTouch;\n"],"names":[],"mappings":"AAAA,oCAAoC;;;;AACpC;AACA;AACA;AACA;;;;;;;;;;;;;AAEA,MAAM,eAAe;IACnB,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,sMAAC;QACC,KAAK,oIAAA,CAAA,MAAG,CAAC;;;;;;;;;MAST,CAAC;;0BAED,sMAAC,mHAAA,CAAA,UAAI;gBAAC,IAAG;gBAAK,MAAK;0BAAQ;;;;;;0BAI3B,sMAAC,qHAAA,CAAA,UAAM;gBAAC,SAAS,IAAM,OAAO,IAAI;gBAAI,SAAS;0BAAC;;;;;;;;;;;;AAKtD;uCAEe"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 687, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/components/Skeleton.tsx"],"sourcesContent":["import {ComponentProps} from 'react';\nimport {useTheme} from '@emotion/react';\nimport Text from './Text';\nimport Image from 'next/image';\nimport {css} from '@emotion/react';\n\ntype SkeletonTextProps = Omit<ComponentProps<typeof Text>, 'children'>;\n\nconst SkeletonText = ({...rest}: SkeletonTextProps) => {\n  const {skeletonCSS} = useTheme();\n\n  const getCssProp = () => {\n    const cssProp = rest.cssProp ? rest.cssProp : [];\n\n    const completedCssProp = Array.isArray(cssProp) ? cssProp : [cssProp];\n\n    return [...completedCssProp, skeletonCSS];\n  };\n\n  return (\n    <Text {...rest} cssProp={getCssProp()}>\n      &nbsp;\n    </Text>\n  );\n};\n\ntype SkeletonImage = ComponentProps<typeof Image>;\n\nconst SkeletonImage = ({...rest}: SkeletonImage) => {\n  const {skeletonCSS} = useTheme();\n\n  return (\n    <div\n      {...rest}\n      css={[\n        skeletonCSS,\n        css`\n          width: ${rest.width}px;\n          height: ${rest.height}px;\n        `,\n      ]}\n    />\n  );\n};\n\nconst Skeleton = {\n  Text: SkeletonText,\n  Image: SkeletonImage,\n};\n\nexport default Skeleton;\n"],"names":[],"mappings":";;;;AACA;AACA;;;;;;;;;;;AAMA,MAAM,eAAe,CAAC,EAAC,GAAG,MAAwB;IAChD,MAAM,EAAC,WAAW,EAAC,GAAG,CAAA,GAAA,oIAAA,CAAA,WAAQ,AAAD;IAE7B,MAAM,aAAa;QACjB,MAAM,UAAU,KAAK,OAAO,GAAG,KAAK,OAAO,GAAG,EAAE;QAEhD,MAAM,mBAAmB,MAAM,OAAO,CAAC,WAAW,UAAU;YAAC;SAAQ;QAErE,OAAO;eAAI;YAAkB;SAAY;IAC3C;IAEA,qBACE,sMAAC,mHAAA,CAAA,UAAI;QAAE,GAAG,IAAI;QAAE,SAAS;kBAAc;;;;;;AAI3C;AAIA,MAAM,gBAAgB,CAAC,EAAC,GAAG,MAAoB;IAC7C,MAAM,EAAC,WAAW,EAAC,GAAG,CAAA,GAAA,oIAAA,CAAA,WAAQ,AAAD;IAE7B,qBACE,sMAAC;QACE,GAAG,IAAI;QACR,KAAK;YACH;YACA,oIAAA,CAAA,MAAG,CAAC;iBACK,EAAE,KAAK,KAAK,CAAC;kBACZ,EAAE,KAAK,MAAM,CAAC;QACxB,CAAC;SACF;;;;;;AAGP;AAEA,MAAM,WAAW;IACf,MAAM;IACN,OAAO;AACT;uCAEe"}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/components/SkeletonBlinker.tsx"],"sourcesContent":["import {SerializedStyles, useTheme} from '@emotion/react';\nimport {Children, cloneElement, isValidElement, memo, ReactElement, ReactNode} from 'react';\nimport Skeleton from './Skeleton';\n\nconst getCSS = (props: any) => {\n  return props.cssProp ? props.cssProp : props.css ? props.css : {};\n};\n\nconst SkeletonUI = ({cssProp}: {cssProp?: SerializedStyles}) => {\n  const {skeletonCSS} = useTheme();\n\n  return <span css={[skeletonCSS, cssProp]} />;\n};\n\nconst executeAndTransform = (Component: any, props: any, isLoading: boolean) => {\n  const jsx = Component({...props, isLoading});\n  return jsx;\n};\n\nconst transformSkeleton = (\n  node: ReactElement<{children: ReactNode}> | ReactElement<{children: ReactNode}>[],\n  isLoading: boolean,\n): ReactNode => {\n  if (!node) return;\n\n  if (Array.isArray(node)) {\n    return node.map(child => transformSkeleton(child, isLoading));\n  }\n\n  if (!isValidElement(node)) {\n    return node; // 문자열, 숫자 등 기본 노드는 그대로 반환\n  }\n\n  const {type, props} = node as ReactElement<any>;\n\n  // 1️⃣ `data-skeleton`이 있는 요소라면 무조건 스켈레톤 UI로 변경\n  if (props['data-skeleton']) {\n    if (typeof type !== 'string' && type.name === 'Text' && isLoading)\n      return <Skeleton.Text type={props.type} cssProp={props.cssProp} />;\n    if ('alt' in props && isLoading) return <Skeleton.Image {...props} />;\n\n    return isLoading ? <SkeletonUI cssProp={getCSS(props)} /> : node;\n  }\n\n  // 기본 html\n  if (typeof type === 'string') {\n    return cloneElement(node, {\n      children: Children.map(props.children, child => transformSkeleton(child, isLoading)),\n    });\n  }\n\n  // 사용자 정의 컴포넌트 까기 전\n  if (typeof type === 'function') {\n    const jsx = executeAndTransform(type, props, isLoading);\n    return transformSkeleton(jsx, isLoading);\n  }\n\n  // 까진거 | emotion element\n  return cloneElement(node, {\n    children: Children.map(props.children, child => transformSkeleton(child, isLoading)),\n  });\n};\n\nconst SkeletonBlinker = ({\n  children,\n  isLoading,\n}: {\n  children: ReactElement<{children: ReactNode}>;\n  isLoading: boolean;\n}) => {\n  const transformedChildren = transformSkeleton(children, isLoading);\n\n  return <>{transformedChildren}</>;\n};\n\nexport default SkeletonBlinker;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;;;;AAEA,MAAM,SAAS,CAAC;IACd,OAAO,MAAM,OAAO,GAAG,MAAM,OAAO,GAAG,MAAM,GAAG,GAAG,MAAM,GAAG,GAAG,CAAC;AAClE;AAEA,MAAM,aAAa,CAAC,EAAC,OAAO,EAA+B;IACzD,MAAM,EAAC,WAAW,EAAC,GAAG,CAAA,GAAA,oIAAA,CAAA,WAAQ,AAAD;IAE7B,qBAAO,sMAAC;QAAK,KAAK;YAAC;YAAa;SAAQ;;;;;;AAC1C;AAEA,MAAM,sBAAsB,CAAC,WAAgB,OAAY;IACvD,MAAM,MAAM,UAAU;QAAC,GAAG,KAAK;QAAE;IAAS;IAC1C,OAAO;AACT;AAEA,MAAM,oBAAoB,CACxB,MACA;IAEA,IAAI,CAAC,MAAM;IAEX,IAAI,MAAM,OAAO,CAAC,OAAO;QACvB,OAAO,KAAK,GAAG,CAAC,CAAA,QAAS,kBAAkB,OAAO;IACpD;IAEA,IAAI,eAAC,CAAA,GAAA,mGAAA,CAAA,iBAAc,AAAD,EAAE,OAAO;QACzB,OAAO,MAAM,0BAA0B;IACzC;IAEA,MAAM,EAAC,IAAI,EAAE,KAAK,EAAC,GAAG;IAEtB,+CAA+C;IAC/C,IAAI,KAAK,CAAC,gBAAgB,EAAE;QAC1B,IAAI,OAAO,SAAS,YAAY,KAAK,IAAI,KAAK,UAAU,WACtD,qBAAO,sMAAC,uHAAA,CAAA,UAAQ,CAAC,IAAI;YAAC,MAAM,MAAM,IAAI;YAAE,SAAS,MAAM,OAAO;;;;;;QAChE,IAAI,SAAS,SAAS,WAAW,qBAAO,sMAAC,uHAAA,CAAA,UAAQ,CAAC,KAAK;YAAE,GAAG,KAAK;;;;;;QAEjE,OAAO,0BAAY,sMAAC;YAAW,SAAS,OAAO;;;;;mBAAa;IAC9D;IAEA,UAAU;IACV,IAAI,OAAO,SAAS,UAAU;QAC5B,qBAAO,CAAA,GAAA,mGAAA,CAAA,eAAY,AAAD,EAAE,MAAM;YACxB,UAAU,mGAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,MAAM,QAAQ,EAAE,CAAA,QAAS,kBAAkB,OAAO;QAC3E;IACF;IAEA,mBAAmB;IACnB,IAAI,OAAO,SAAS,YAAY;QAC9B,MAAM,MAAM,oBAAoB,MAAM,OAAO;QAC7C,OAAO,kBAAkB,KAAK;IAChC;IAEA,wBAAwB;IACxB,qBAAO,CAAA,GAAA,mGAAA,CAAA,eAAY,AAAD,EAAE,MAAM;QACxB,UAAU,mGAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,MAAM,QAAQ,EAAE,CAAA,QAAS,kBAAkB,OAAO;IAC3E;AACF;AAEA,MAAM,kBAAkB,CAAC,EACvB,QAAQ,EACR,SAAS,EAIV;IACC,MAAM,sBAAsB,kBAAkB,UAAU;IAExD,qBAAO;kBAAG;;AACZ;uCAEe"}},
    {"offset": {"line": 851, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 858, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/constants/cardCompanies.ts"],"sourcesContent":["type CardCompanyValue = {\n  name: string;\n  value: CardCompany;\n};\n\nconst CARD_COMPANIES: CardCompanyValue[] = [\n  {\n    name: '비씨카드',\n    value: 'bc',\n  },\n  {\n    name: '신한카드',\n    value: 'shinhan',\n  },\n  {\n    name: '카카오뱅크',\n    value: 'kakao',\n  },\n  {\n    name: '현대카드',\n    value: 'hyundai',\n  },\n  {\n    name: '우리카드',\n    value: 'woori',\n  },\n  {\n    name: '롯데카드',\n    value: 'lotte',\n  },\n  {\n    name: '하나카드',\n    value: 'hana',\n  },\n  {\n    name: '국민카드',\n    value: 'kb',\n  },\n];\n\nexport default CARD_COMPANIES;\n"],"names":[],"mappings":";;;AAKA,MAAM,iBAAqC;IACzC;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;IACA;QACE,MAAM;QACN,OAAO;IACT;CACD;uCAEc"}},
    {"offset": {"line": 896, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 902, "column": 0}, "map": {"version":3,"sources":["file:///Users/pakxe/Desktop/wtc/next-payments/src/pages/complete-card-registration/index.tsx"],"sourcesContent":["import Button from '@/components/Button';\nimport InvalidTouch from '@/components/InvalidTouch';\nimport SkeletonBlinker from '@/components/SkeletonBlinker';\nimport Text from '@/components/Text';\nimport CARD_COMPANIES from '@/constants/cardCompanies';\nimport {css} from '@emotion/react';\nimport Image from 'next/image';\nimport {useRouter} from 'next/router';\nimport {useEffect, useState} from 'react';\n\nconst ALLOWED_TIME_DIFF = 30 * 1000;\n\ntype Props = {\n  cardNumber: string;\n  company: CardCompany;\n};\n\nconst CompleteCardRegistration = ({cardNumber, company}: Props) => {\n  const companyName = CARD_COMPANIES.find(({value}) => value === company)?.name || '알 수 없음';\n\n  return (\n    <>\n      <Image data-skeleton src=\"/check.png\" width={100} height={100} alt=\"check\" />\n      <Text data-skeleton as=\"h1\" type=\"title\">\n        {cardNumber}로 시작하는\n        <br />\n        {companyName}가 등록되었어요.\n      </Text>\n      <Button data-skeleton fullWidth>\n        확인\n      </Button>\n    </>\n  );\n};\n\nconst CompleteCardRegistrationPage = () => {\n  const router = useRouter();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isValidAccess, setIsValidAccess] = useState(true);\n\n  useEffect(() => {\n    if (!router.isReady) return;\n\n    setIsLoading(false);\n    if (!router.query.cardNumber || !router.query.company || !router.query.ts) return setIsValidAccess(false);\n\n    const now = Date.now();\n    const ts = Number(router.query.ts);\n\n    if (!ts || now - ts > ALLOWED_TIME_DIFF) return setIsValidAccess(false);\n\n    setIsValidAccess(true);\n  }, [router.isReady, router.query]);\n\n  if (!isValidAccess) {\n    return <InvalidTouch />;\n  }\n\n  return (\n    <main\n      css={css`\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        height: 100vh;\n\n        gap: 32px;\n      `}\n    >\n      <SkeletonBlinker isLoading={isLoading}>\n        <CompleteCardRegistration\n          cardNumber={router.query.cardNumber as string}\n          company={router.query.company as CardCompany}\n        />\n      </SkeletonBlinker>\n    </main>\n  );\n};\n\nexport default CompleteCardRegistrationPage;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AAEA,MAAM,oBAAoB,KAAK;AAO/B,MAAM,2BAA2B,CAAC,EAAC,UAAU,EAAE,OAAO,EAAQ;IAC5D,MAAM,cAAc,0HAAA,CAAA,UAAc,CAAC,IAAI,CAAC,CAAC,EAAC,KAAK,EAAC,GAAK,UAAU,UAAU,QAAQ;IAEjF,qBACE;;0BACE,sMAAC,sHAAA,CAAA,UAAK;gBAAC,eAAa;gBAAC,KAAI;gBAAa,OAAO;gBAAK,QAAQ;gBAAK,KAAI;;;;;;0BACnE,sMAAC,mHAAA,CAAA,UAAI;gBAAC,eAAa;gBAAC,IAAG;gBAAK,MAAK;;oBAC9B;oBAAW;kCACZ,sMAAC;;;;;oBACA;oBAAY;;;;;;;0BAEf,sMAAC,qHAAA,CAAA,UAAM;gBAAC,eAAa;gBAAC,SAAS;0BAAC;;;;;;;;AAKtC;AAEA,MAAM,+BAA+B;IACnC,MAAM,SAAS,CAAA,GAAA,uHAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEnD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO,OAAO,EAAE;QAErB,aAAa;QACb,IAAI,CAAC,OAAO,KAAK,CAAC,UAAU,IAAI,CAAC,OAAO,KAAK,CAAC,OAAO,IAAI,CAAC,OAAO,KAAK,CAAC,EAAE,EAAE,OAAO,iBAAiB;QAEnG,MAAM,MAAM,KAAK,GAAG;QACpB,MAAM,KAAK,OAAO,OAAO,KAAK,CAAC,EAAE;QAEjC,IAAI,CAAC,MAAM,MAAM,KAAK,mBAAmB,OAAO,iBAAiB;QAEjE,iBAAiB;IACnB,GAAG;QAAC,OAAO,OAAO;QAAE,OAAO,KAAK;KAAC;IAEjC,IAAI,CAAC,eAAe;QAClB,qBAAO,sMAAC,2HAAA,CAAA,UAAY;;;;;IACtB;IAEA,qBACE,sMAAC;QACC,KAAK,oIAAA,CAAA,MAAG,CAAC;;;;;;;;;MAST,CAAC;kBAED,cAAA,sMAAC,8HAAA,CAAA,UAAe;YAAC,WAAW;sBAC1B,cAAA,sMAAC;gBACC,YAAY,OAAO,KAAK,CAAC,UAAU;gBACnC,SAAS,OAAO,KAAK,CAAC,OAAO;;;;;;;;;;;;;;;;AAKvC;uCAEe"}},
    {"offset": {"line": 1038, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}